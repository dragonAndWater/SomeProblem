
--反射原理------
    java文件从被加载到被卸载一共会经历5个阶段：加载---链接（验证+准备+解析）---初始化---使用---卸载

    --所谓加载，简而言之就是将java类的字节码文件加载到极其内存中，并在内存中构建出java类的原型----类模板对象

    类模板对象---java类在JVM中的一个快照，JVM将从字节码文件中解析出来的常量池、类字段、类方法等信息存储到类模板中，这样JVM在运行期就能够通过类模板二获取java类中的任意信息
    能够对java类的成员变量进行遍历，也能进行java方法的调用。

    反射的机制就是基于这一基础。

    --所谓链接（验证+准备+解析）
        验证：根据字节码文件中的类名能否找到对应的类模板，字节码文件格式等

    --初始化
        执行类的<clinit>()方法。
        
    当类加载之后，JVM会为java类创建一个对等的类模板，类模板在JDK6时被存在perm中，JDK8时被存在metaSpace区.
    当存储区即将被打爆而这个类又不用时，JVM的GC便有可能将其回收。
    
    当实例化一个java类后，JVM会为java类实例对象创建一个对等的实例对象，该实例对象所存储的区域与具体的GC策略紧密相关，有可能在新生代、也可能在老年代，更可能在栈上。
    当类被使用完毕之后，JVM必须销毁对象。
    
    JVM对类模板和对对象实例的销毁都是卸载。
    















